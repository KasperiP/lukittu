{
  "/api/v1/dev/teams/{teamId}/licenses": {
    "post": {
      "security": [
        {
          "bearerAuth": []
        }
      ],
      "tags": ["Dev"],
      "summary": "Create a new license",
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "expirationType",
                "suspended",
                "sendEmailDelivery",
                "productIds",
                "customerIds",
                "metadata"
              ],
              "properties": {
                "customerIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "productIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "expirationDate": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "expirationDays": {
                  "type": "integer",
                  "minimum": 1,
                  "nullable": true
                },
                "expirationStart": {
                  "type": "string",
                  "enum": ["CREATION", "ACTIVATION"],
                  "nullable": true
                },
                "expirationType": {
                  "type": "string",
                  "enum": ["NEVER", "DATE", "DURATION"]
                },
                "ipLimit": {
                  "type": "integer",
                  "minimum": 0,
                  "nullable": true
                },
                "metadata": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "locked": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "hwidLimit": {
                  "type": "integer",
                  "minimum": 1,
                  "nullable": true
                },
                "suspended": {
                  "type": "boolean"
                },
                "sendEmailDelivery": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "License created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/LicenseResponse"
              }
            }
          }
        },
        "400": {
          "description": "Invalid request body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "401": {
          "description": "Invalid API key",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "403": {
          "description": "Max licenses reached",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "429": {
          "description": "Too many email delivery requests",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "get": {
      "security": [
        {
          "bearerAuth": []
        }
      ],
      "tags": ["Dev"],
      "summary": "Get licenses",
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "page",
          "in": "query",
          "schema": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          }
        },
        {
          "name": "pageSize",
          "in": "query",
          "schema": {
            "type": "integer",
            "enum": [10, 25, 50, 100],
            "default": 25
          }
        },
        {
          "name": "sortColumn",
          "in": "query",
          "schema": {
            "type": "string",
            "enum": ["createdAt", "updatedAt"],
            "default": "createdAt"
          }
        },
        {
          "name": "sortDirection",
          "in": "query",
          "schema": {
            "type": "string",
            "enum": ["asc", "desc"],
            "default": "desc"
          }
        },
        {
          "name": "productIds",
          "in": "query",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "customerIds",
          "in": "query",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Licenses retrieved successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "hasNextPage": {
                        "type": "boolean"
                      },
                      "licenses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "licenseKey": {
                              "type": "string",
                              "pattern": "^[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}$"
                            },
                            "ipLimit": {
                              "type": "integer",
                              "nullable": true
                            },
                            "metadata": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "locked": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "expirationType": {
                              "type": "string",
                              "enum": ["NEVER", "DATE", "DURATION"]
                            },
                            "expirationStart": {
                              "type": "string",
                              "enum": ["CREATION", "ACTIVATION"]
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "expirationDays": {
                              "type": "integer",
                              "nullable": true
                            },
                            "hwidLimit": {
                              "type": "integer",
                              "nullable": true
                            },
                            "suspended": {
                              "type": "boolean"
                            },
                            "teamId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "createdByUserId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastActiveAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "details": {
                        "type": "string"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Invalid API key",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/v1/dev/teams/{teamId}/licenses/id/{licenseId}": {
    "get": {
      "security": [
        {
          "bearerAuth": []
        }
      ],
      "tags": ["Dev"],
      "summary": "Get license by ID",
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "licenseId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "License found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/LicenseResponse"
              }
            }
          }
        },
        "400": {
          "description": "Invalid teamId or licenseId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "401": {
          "description": "Invalid API key",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "404": {
          "description": "License not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "delete": {
      "summary": "Delete License by ID",
      "deprecated": false,
      "description": "This endpoint allows you to delete a license by its unique identifier. This operation is permanent and cannot be undone.",
      "tags": ["Dev"],
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "description": "Your team's UUID. You can find this value in your team's settings on the Lukittu dashboard. Format: UUID v4.",
          "required": true,
          "example": "{{$string.uuid}}",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "licenseId",
          "in": "path",
          "description": "The unique identifier (UUID v4) of the license to delete.",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "License successfully deleted",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "licenseId": {
                        "type": "string",
                        "description": "The ID of the license that was deleted"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "Indicates if the license was successfully deleted"
                      }
                    },
                    "required": ["licenseId", "deleted"]
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      }
                    },
                    "required": ["timestamp", "valid", "details"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request or validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      }
                    },
                    "required": ["timestamp", "valid", "details"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        },
        "404": {
          "description": "License not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      }
                    },
                    "required": ["timestamp", "valid", "details"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/api/v1/dev/teams/{teamId}/licenses/{licenseKey}": {
    "get": {
      "security": [
        {
          "bearerAuth": []
        }
      ],
      "tags": ["Dev"],
      "summary": "Get license by key",
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "licenseKey",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "^[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}$"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "License found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/LicenseResponse"
              }
            }
          }
        },
        "400": {
          "description": "Invalid teamId or licenseKey",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "401": {
          "description": "Invalid API key",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "404": {
          "description": "License not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../../openapi.json#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "delete": {
      "summary": "Delete License by Key",
      "deprecated": false,
      "description": "This endpoint allows you to delete a license by its license key. This operation is permanent and cannot be undone.",
      "tags": ["Dev"],
      "parameters": [
        {
          "name": "teamId",
          "in": "path",
          "description": "Your team's UUID. You can find this value in your team's settings on the Lukittu dashboard. Format: UUID v4.",
          "required": true,
          "example": "{{$string.uuid}}",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "licenseKey",
          "in": "path",
          "description": "The Lukittu license key to delete. Lukittu license keys always follow this format: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX where X is an uppercase letter (A-Z) or a digit (0-9).",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "^[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}$"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "License successfully deleted",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "licenseKey": {
                        "type": "string",
                        "description": "The license key that was deleted"
                      },
                      "deleted": {
                        "type": "boolean",
                        "description": "Indicates if the license was successfully deleted"
                      }
                    },
                    "required": ["licenseKey", "deleted"]
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      }
                    },
                    "required": ["timestamp", "valid", "details"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        },
        "400": {
          "description": "Bad request or validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      }
                    },
                    "required": ["timestamp", "valid", "details"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        },
        "404": {
          "description": "License not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "nullable": true
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "valid": {
                        "type": "boolean"
                      },
                      "details": {
                        "type": "string"
                      }
                    },
                    "required": ["timestamp", "valid", "details"]
                  }
                },
                "required": ["data", "result"]
              }
            }
          }
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  }
}
